name: Python package

on: [push, pull_request]

jobs:
  build:
    name: Build Job

    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install python package locally
      run: |
        python3 -m pip install --upgrade pip
        pip3 install --editable src
    - name: Lint with flake8
      run: |
        pip3 install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip3 install pytest
        pwd
        ls -al
        echo GITHUB_WORKSPACE=${GITHUB_WORKSPACE}
        echo "ARCH=${ARCH}"
        ${GITHUB_WORKSPACE}/install_requirements.sh
        ${GITHUB_WORKSPACE}/tests/run-tests.sh
        
        
  release:
    name: Release Job
    needs: [build]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Install Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Install Python 3
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install Semantic Release Tool
      run: |
            npm install --save-dev semantic-release
            npm install --save-dev @semantic-release/commit-analyzer
            npm install --save-dev @semantic-release/git
            npm install --save-dev @semantic-release/release-notes-generator
            npm install --save-dev @semantic-release/github
            npm install --save-dev @semantic-release/changelog
            npm install --save-dev @semantic-release/exec
    - name: Run Semantic Release
      run: npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_PAT }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    - name: Semantic release completed
      run: echo Semantic release flow completed